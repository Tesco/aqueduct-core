micronaut:
  metrics.binders:
    jvm.enabled: true
    web.enabled: true
    processor.enabled: true
    jdbc.enabled: false
  security:
    enabled: true
    token.jwt:
      enabled: true
      bearer.enabled: true
  caches:
    identity-cache:
      expire-after-write: 10m
    cluster-cache:
      expire-after-write: 1h
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
  executors:
    io:
      type: fixed
      nThreads: 6
  server:
    netty:
      worker:
        threads: 100
    thread-selection: AUTO
    idle-timeout: 20s

endpoints:
  all:
    enabled: true
    path: /endpoints
    sensitive: true

datasources:
  pipe:
    jdbc-url: "jdbc:postgresql://${POSTGRE_SERVER}/${POSTGRE_DATABASE}"
    username: "${POSTGRE_USERNAME}"
    password: "${POSTGRE_PASSWORD}"
    driver-class-name: org.postgresql.Driver
    maximum-pool-size: 4
    max-lifetime: 600000
    leak-detection-threshold: 60000
  registry:
    jdbc-url: "jdbc:postgresql://${POSTGRE_SERVER}/${POSTGRE_DATABASE}"
    username: "${POSTGRE_USERNAME}"
    password: "${POSTGRE_PASSWORD}"
    driver-class-name: org.postgresql.Driver
    maximum-pool-size: 2
    max-lifetime: 600000
    leak-detection-threshold: 60000

authentication:
  identity:
    delay: 500ms
    attempts: 3

location:
  delay: 500ms
  attempts: 3

pipe:
  delay: 500ms
  attempts: 1
  reset: 240s

registry:
  mark-offline-after: 25m

compression.threshold-in-bytes: 1024
